# Load the Lua script
lua_shared_dict acme_storage 10m;
lua_package_path "/etc/nginx/?.lua;/usr/share/lua/5.1/?.lua;/usr/share/lua/5.1/?/init.lua;/usr/lib64/lua/5.1/?.lua;/usr/lib64/lua/5.1/?/init.lua;./?.lua;./?/init.lua;/usr/local/lib/lua/5.1/?.lua;/usr/local/lib/lua/5.1/?/init.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua;;";

# Define the server block for HTTP
server {
    listen 80;
    server_name flux.lootlink.xyz;
    return 301 https://$host$request_uri;
}

# Define the server block for HTTPS
server {
    listen 443 ssl http2;
    server_name flux.lootlink.xyz;

    ssl_certificate /etc/nginx/certs/flux.lootlink.xyz.pem;
    # ssl_certificate_key /etc/nginx/certs/example.com.key;

    # Enable TLSv1.3 only
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256";

    # Enable OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    # resolver 8.8.8.8;

    # Set the HSTS header
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

    # Use the Lua script for ACME http-01 challenges
    location /.well-known/acme-challenge/ {
        default_type text/plain;
        content_by_lua_file /etc/nginx/acme-http01-nginx-webroot.lua;
    }

    # Proxy requests to the backend servers
    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
    }
}

# Define the upstream backend servers
upstream backend {
    server 127.0.0.1:8000;
    server 127.0.0.1:9000;
    server 127.0.0.1:1100;
}